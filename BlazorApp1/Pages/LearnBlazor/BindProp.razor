@page "/LearnBlazor/BindProp"
<h2 class="text-success">Product Page</h2>
<div class="row">

    <div class="col-6 border p-3">
        <h4 class="text-primary">Automobiles Status</h4><hr />
        <div>Availability Status: <input type="checkbox" @bind-value="Product.Active" checked="@(Product.Active?"checked":null)" /></div>
        <div>
            Product Properties:
            <select @bind="selectedProp">
                @foreach (var prop in Product.ProductProperties)
                {
                    <option value="@prop.Key">@prop.Key</option>
                }
            </select>
        </div>
        <div>
            Price : <input type="number" @bind-value="@Product.price" @bind-value:event="oninput" />
        </div>
    </div>

<div class="col-6 border p-3">
    @*--------------------------------------------------------------------------*@
    <h4 class="text-primary">Automobile</h4><hr />
    Name : @Product.Name3
    <br />
        Availability : @Product.Active
    <br />
    Price : @Product.price Pounds
    <br />
    Property Selected: @selectedProp
    <br />
    @if (!String.IsNullOrWhiteSpace(selectedProp))
    {
        <p>Property Value: @Product.ProductProperties.FirstOrDefault(u=>u.Key == selectedProp).Value</p>
    }
        This Product is: @(Product.Active ? "Available" : "Unavailable")
</div>

<br />
</div>

<br />
<div class="col-6">
    <h3 class="text-success">Automobile List</h3>
    @*<input type="text" @bind-value:event="oninput" @bind-value="" />*@
    <table class="table table-striped">
        <tbody>
            @foreach(var prod in Products)
            {
                <tr>
                    <td>
                        <input type="text" @bind-value="prod.Name" @bind-value:event="oninput" />
                    </td>
                    <td>
                        <input type="number" @bind-value="prod.Price" @bind-value:event="oninput" />
                    </td>
                    <td>
                        <input type="checkbox" @bind-value="prod.IsActive" checked="@(prod.IsActive?"checked":null)"/>
                    </td>

                </tr>
            }
        </tbody>
    </table>
    <br /><br />
    <h2>Product Summary</h2>
    @foreach(var prod in Products)
    {
        <p>@prod.Name with price $ @prod.Price is @(prod.IsActive?"Active":"Inactive")</p>
    }
</div>


@code {
    private string selectedProp = "";

    Demo_Products Product = new()
        {
           
            Id3 = 3,
            Name3 = "Nissan GT-R",
            price = 52000,
            Active = true,
            ProductProperties = new List<Demo_ProductProp>()
           {
             new Demo_ProductProp { Id= 1, Key="Color",Value="Metallic Black"},
             new Demo_ProductProp { Id = 2, Key = "Brand", Value="Nissan"},
             new Demo_ProductProp { Id = 3, Key = "Top Speed", Value="215"}
           }
        };

    List<Demo_Products> Products = new();

    protected override void OnInitialized()
    {
        Products.Add(new()
            {
                Id = 1,
                Name = "Midnight Blaze",
                IsActive = false,
                Price = 10.99,
                ProductProperties = new()
                {
                new Demo_ProductProp { Id = 1, Key = "Flavor", Value = "Rose"},
                     new Demo_ProductProp { Id = 2, Key = "Size", Value = "20oz"},
                    new Demo_ProductProp { Id = 3, Key = "Color", Value="Purple" }
                }
            });

        Products.Add(new()
            {
                Id = 2,
                Name = "Blossom Lily",
                IsActive = true,
                Price = 13.99,
                ProductProperties = new()
            {
                new Demo_ProductProp { Id = 1, Key = "Flavor", Value = "Lily" },
                new Demo_ProductProp { Id = 2, Key = "Size", Value = "18oz" },
                new Demo_ProductProp {Id = 3,Key = "Color",Value = "White"}
            }
            });
    }
    }
    